//============================================================
//
//  title  : データ構造 [main.cpp]
//  Author : 原田 陽央
//   Date  : 2021/10/04
//  Update : 2021/10/06
//
//============================================================
//============================================================
//　インクルード
//============================================================
#include "hashTable.h"


//============================================================
//　関数
//============================================================
//------------------------------------------------------------
//　メイン関数
//------------------------------------------------------------
int main(void)
{
	// ハッシュテーブルの生成
	HashTable hashTable;

	// 要素を入力
	RecordData hashtTableData[12] =
	{
		"つくえ", "本を読み、字を書き、また仕事をするために使う台。",
		"いす", "人が腰をかけるための家具の総称。",
		"たんす", "引出し，戸棚，衣装盆等からなる収納家具。",
		"れいぞうこ", "食品を貯蔵するために、収容部の温度を低温度に保つことができる装置。",
		"ベッド", "睡眠、休息のために横臥(おうが)する家具。",
		"テレビ", "テレビジョンの略",
		"ごみばこ", "不要になったファイルやフォルダを一時的に保管する場所のこと。",
		"ゲーム", "遊びごと。",
		"くうきせいじょうき", "塵埃(じんあい)などの微粒子を取り除き、汚れた空気を浄化する装置。",
		"ハンガー", "洋服の肩の部分に入れてつるす、肩の形をした器具。",
		"でんしレンジ", "マイクロ波の性質を利用して食品を加熱する調理器具。",
		"ノートパソコン", "ノートブック型パーソナルコンピュータ。"
	};

	// 要素を追加
	for (int i = 0; i < 12; i++)
	{
		hashTable.AddData(hashtTableData[i]);
	}

	// データを表示
	hashTable.Disp();

	// 検索したい単語を入力する
	string word = "";
	cout << "\n文字を入力して Enter を押してください。" << endl;
	cin >> word;
	cout << "\n" << endl;

	// 検索して表示
	if (hashTable.Search(word).word != "")
	{
		std::cout << "単語：" << hashTable.Search(word).word << std::endl;
		std::cout << "説明：" << hashTable.Search(word).description << std::endl;
	}
	else
	{
		std::cout << "一致するデータが見つかりませんでした。" << std::endl;
	}
}
