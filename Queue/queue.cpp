//============================================================
//
//  title  : データ構造（キュー） [queue.cpp]
//  Author : 原田 陽央
//   Date  : 2021/10/06
//  Update : 2021/10/11
//
//============================================================
//============================================================
//　インクルード
//============================================================
#include "queue.h"
#include "DoublyLinkedList.h"


//============================================================
//　関数
//============================================================
//------------------------------------------------------------
//　【 コンストラクタ 】
//------------------------------------------------------------
Queue::Queue()
{
	;
}


//------------------------------------------------------------
//　【 デストラクタ 】
//------------------------------------------------------------
Queue::~Queue()
{
	;
}


//------------------------------------------------------------
//　【 データを表示 】
//------------------------------------------------------------
void Queue::Disp()
{
	// 表示用の変数
	DoublyLinkedList::Node* temp = queueList.GetTopPtr();

	// エラーチェック
	if (temp == nullptr)
	{
		std::cout << "データがありません。" << std::endl;
		return;
	}
	else
	{
		std::cout << "データを表示" << endl;
	}

	// temp が NULL じゃなければデータ表示
	while (temp != nullptr)
	{
		std::cout << temp->recordData.score << "　" << temp->recordData.userName << std::endl;
		temp = temp->nextPtr;
	}
}


//------------------------------------------------------------
//　【 デキュー（要素を取り出す） 】
//------------------------------------------------------------
void Queue::Dequeue()
{
	// 取り出し用の変数
	DoublyLinkedList::Node* temp = queueList.GetTopPtr();

	// データを表示
	std::cout << "下記のデータを取り出しました" << endl;
	std::cout << temp->recordData.score << "　" << temp->recordData.userName << std::endl;

	// リストから先頭のデータを削除
	queueList.Remove(1);
}


//------------------------------------------------------------
//　【 エンキュー（要素を追加する） 】
//　addRecordData：追加したい成績データ
//------------------------------------------------------------
void Queue::Enqueue(const RecordData& addRecordData)
{
	// リストにデータを追加
	queueList.AddEnd(addRecordData);
}
