//============================================================
//
//  title  : リスト構造（双方向リスト） [list.cpp]
//  Author : 原田 陽央
//   Date  : 2021/10/04
//  Update : 2021/10/05
//
//============================================================
#include "list.h"


//============================================================
//　変数宣言
//============================================================
List* List::topPtr;
List* List::endPtr;


//============================================================
//　関数
//============================================================
//------------------------------------------------------------
//　コンストラクタ
//------------------------------------------------------------
List::List()
{
	nextPtr = nullptr;
	prevPtr = nullptr;
}


//------------------------------------------------------------
//　引数付きコンストラクタ
//------------------------------------------------------------
List::List(int aScore, string aUserName)
{
	score = aScore;
	userName = aUserName;
}


//------------------------------------------------------------
//　デストラクタ
//------------------------------------------------------------
List::~List()
{
	;
}


//------------------------------------------------------------
//　データを出力
//------------------------------------------------------------
void List::OutputData()
{
	// 名前を出力
	printf("%s", userName);
}


//------------------------------------------------------------
//　先頭にデータを追加
//------------------------------------------------------------
void List::AddTop(int aScore, string aUserName)
{
	List* list = Create(aScore, aUserName);

	// 生成できなかったらreturn
	if (list == nullptr) return;

	// リストが空の場合は先頭と末尾は新要素となる
	if (endPtr == nullptr)
	{
		topPtr = endPtr = list;
	}
	else
	{
		// 新要素の次のポインタに先頭要素をつなぐ
		list->nextPtr = topPtr;

		// 前先頭の次のポインタに新要素をつなぐ
		topPtr->prevPtr = list;

		// 先頭ポインタを更新
		topPtr = list;
	}
}


//------------------------------------------------------------
//　末尾にデータを追加
//------------------------------------------------------------
void List::AddEnd(int aScore, string aUserName)
{
	List* list = Create(aScore, aUserName);

	// 生成できなかったらreturn
	if (list == nullptr) return;

	// リストが空の場合は先頭と末尾は新要素となる
	if (endPtr == nullptr)
	{
		topPtr = endPtr = list;
	}
	else
	{
		// 新要素を末尾要素の次のポインタにつなぐ
		endPtr->nextPtr = list;

		// 新要素の前のポインタに末尾要素をつなぐ
		list->prevPtr = endPtr;

		// 末尾ポインタを更新
		endPtr = list;
	}
}

//------------------------------------------------------------
//　ソート（並び替え）
//------------------------------------------------------------
void List::Sort()
{

}


//------------------------------------------------------------
//　生成
//------------------------------------------------------------
List* List::Create(int aScore, string aUserName)
{
	List* list = new List(aScore, aUserName);

	return list;
}
